class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int n = prices.size();
        if (n == 1) return 0;
        int i = 0;
        int price = 0;
        int max_price = 0;
        int min_price = prices[0];
        int dif = 0;
        int max_dif = 0;
        int cur = 0;
        int prev = 0;

        while (i < n)
        {
            price = prices[i];
            
            if (price > max_price && cur > 0 && price >= min_price)
            {
                max_price = price;
                if (max_price - min_price > max_dif)
                {
                    max_dif = max_price - min_price;
                }
                if (prev == cur - 1)
                {
                    prev = cur;
                }
            }
            if (price <= min_price)
            {
                min_price = price;
                
                if(max_price == 0) cur = 1;
                max_price = 0;
            }
            i++;
        }
        if (max_dif == 0) return 0;

        return max_dif;
    }
};
